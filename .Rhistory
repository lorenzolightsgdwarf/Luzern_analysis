c(1:nrow(subset(test,Trial==1)))
test[r,"meanFixProp"]
for(r in c(1:nrow(subset(test,Trial==1)))){
red=subset(test,Trial==1)[r,"r"]
blue=subset(test,Trial==1)[r,"b"]
saliency_map[which(img[,,1]==red & img[,,3]==blue,arr.ind = T)]=subset(test,Trial==1)[r,"meanFixProp"]
}
saliency_map=matrix(nrow = height,ncol = width,data = 0)
test1=subset(test,Trial==1)
for(r in c(1:nrow(test1))){
red=test1[r,"r"]
blue=test1[r,"b"]
saliency_map[which(img[,,1]==red & img[,,3]==blue,arr.ind = T)]=test1[r,"meanFixProp"]
}
for(r in c(1:nrow(test1))){
red=test1[r,"r"]
blue=test1[r,"b"]
saliency_map[which(img[,,1]==red & img[,,3]==blue,arr.ind = T)]= 0
test1[r,"meanFixProp"]
}
img=read.bmp("Models/1.AOI.res.BMP");
width=dim(img)[1]
height=dim(img)[2]
test=merge(Saliency_Expert,AOI_Codes,by.x = "primary.AOI",by.y = "AOI" )
saliency_map=matrix(nrow = height,ncol = width,data = 0)
test1=subset(test,Trial==1)
for(r in c(1:nrow(test1))){
red=test1[r,"r"]
blue=test1[r,"b"]
saliency_map[which(img[,,1]==red & img[,,3]==blue,arr.ind = T)]= test1[r,"meanFixProp"]
}
which(img[,,1]==red & img[,,3]==blue,arr.ind = T)
saliency_map=matrix(nrow = width,ncol = height,data = 0)
test1=subset(test,Trial==1)
for(r in c(1:nrow(test1))){
red=test1[r,"r"]
blue=test1[r,"b"]
saliency_map[which(img[,,1]==red & img[,,3]==blue,arr.ind = T)]= test1[r,"meanFixProp"]
}
rownames(saliency_map)=c(1:width)
colnames(saliency_map)=c(1:height)
d=melt(saliency_map)
debugSource('~/Luzern_analysis/Sophia\'s part.R', echo=TRUE)
image(kde2d(d$Var1,d$Var2,d$value+0.0001), col=r)
qplot(data=d,x=Var1,y=Var2,color=as.factor(value))
qplot(data=d,x=Var2,y=Var1,color=value)
image(kde2d(d$Var2,d$Var1,d$value+0.0001), col=r)
image(kde2d(d$Var2,d$Var1,d$value+0.0001))
kde2d(d$Var1,d$Var2,d$value+0.0001)
image(kde2d(d$Var2,d$Var1,d$value+0.0001))
kde2d(d$Var1,d$Var2,d$value+0.0001)
image(kde2d(d$Var2,d$Var1,d$value+0.0001))
image(kde2d(d$Var2,d$Var1,exp(d$value+0.0001)))
image(kde2d(d$Var2,d$Var1,exp(d$value+0.0001)),col=r)
image(kde2d(d$Var2,d$Var1,exp(d$value+0.0001)))
library(RColorBrewer)
rf <- colorRampPalette(rev(brewer.pal(11,'Spectral')))
r <- rf(32)
image(kde2d(d$Var2,d$Var1,exp(d$value+0.0001)),col=r)
image(kde2d(d$Var2,d$Var1,exp(d$value+0.0001),n = 100),col=r)
image(kde2d(d$Var2,d$Var1,exp(d$value+0.0001),n = c(100,200)),col=r)
ggplot(d,aes(x=Var2,y=Var1))+
stat_density2d(aes(fill=value), geom="polygon") +
scale_fill_gradient(low="blue", high="green")
ggplot(d,aes(x=Var2,y=Var1))+
stat_density2d(aes(fill=value) +
scale_fill_gradient(low="blue", high="green")
which(img[,,1]<255,arr.ind = T)
tmp=aggregate(Event.Duration..ms.~Participant+Trial+Condition+Learner,data=DF_Dwell,FUN=length)
Saliency=aggregate(Event.Duration..ms.~Participant+Trial+Condition+Learner+primary.AOI,data=DF_Dwell,FUN=length)
Saliency=merge(Saliency,tmp,by=c("Participant","Trial","Condition","Learner"))
colnames(Saliency)[6] <- "Dwell"
colnames(Saliency)[7] <- "Tot"
Saliency$prop=Saliency$Dwell/Saliency$Tot;
Saliency_Condition=aggregate(prop~Trial+Condition+primary.AOI,data=Saliency,FUN=mean)
---------------
library(reshape)
library(reshape2)
experiment_score=only_score[,c(1,2,35:42)]
experiment_score=melt(experiment_score,id.vars = c(1,2))
experiment_score$Trial=ifelse(experiment_score$variable=="Exp_1_Score",1,ifelse(experiment_score$variable=="Exp_2_Score",2,ifelse(experiment_score$variable=="Exp_3_Score",3,ifelse(experiment_score$variable=="Exp_4_Score",4,ifelse(experiment_score$variable=="Exp_5_Score",5,ifelse(experiment_score$variable=="Exp_6_Score",6,ifelse(experiment_score$variable=="Exp_7_Score",7,8)))))))
ggplot(data=experiment_score,aes(x=as.factor(value)))+
geom_bar(position=position_dodge())+facet_wrap(~variable,ncol=4)
qplot(data = only_score,x=Group, y=RLG, geom="boxplot")
qplot(data = only_score,x=Group, y=Pre_tot_Score, geom="boxplot")
qplot(data = only_score,x=Group, y=Post_tot_Score, geom="boxplot")
anova(lm(data=only_score,RLG~Group))
anova(lm(data=only_score,Pre_tot_Score~Group))
anova(lm(data=only_score,Post_tot_Score~Group))
wilcox.test(only_score$RLG~only_score$Group)
wilcox.test(only_score$Pre_tot_Score~only_score$Group)
wilcox.test(only_score$Post_tot_Score~only_score$Group)
tmp=only_score[,c("ID","Pre_tot_Score","Post_tot_Score")]
tmp=melt(tmp,id.vars = "ID")
qplot(data=tmp,x=variable,y=value,geom="boxplot")
pre_data=only_score[,c(1,2,24:30)]
pre_data=melt(pre_data,id.vars = c(1,2))
post_data=only_score[,c(1,2,47:53)]
post_data=melt(post_data,id.vars = c(1,2))
pre_data$variable=as.character(pre_data$variable)
pre_data$variable=substr(pre_data$variable,4,nchar(pre_data$variable))
pre_data$variable=as.factor(pre_data$variable)
post_data$variable=as.character(post_data$variable)
post_data$variable=substr(post_data$variable,5,nchar(post_data$variable))
post_data$variable=as.factor(post_data$variable)
pre_post_data=merge(pre_data,post_data,by = c(1,2,3))
colnames(pre_post_data)[3]="exercise"
colnames(pre_post_data)[4]="pre_score"
colnames(pre_post_data)[5]="post_score"
pre_post_data=melt(pre_post_data,id.vars = c(1:3))
qplot(data=pre_post_data,x=exercise,y=value,geom="boxplot",fill=variable)
View(pre_post_data)
pre_data$variable=substr(pre_data$variable,4,nchar(pre_data$variable))
pre_data$variable=as.character(pre_data$variable)
pre_data$variable=substr(pre_data$variable,4,nchar(pre_data$variable))
pre_data$variable=as.factor(pre_data$variable)
post_data$variable=as.character(post_data$variable)
post_data$variable=substr(post_data$variable,5,nchar(post_data$variable))
post_data$variable=as.factor(post_data$variable)
pre_data=melt(pre_data,id.vars = c(1,2,3))
View(pre_data)
View(post_data)
View(pre_data)
pre_data[,4]=null
pre_data[,4]<-null
pre_data[,-4]
pre_data=pre_data[,-4]
pre_post_data=merge(pre_data,post_data)
View(pre_post_data)
pre_post_data=merge(pre_data,post_data,by = c(1,2))
View(pre_post_data)
pre_post_data=merge(pre_data,post_data,by = c(1,2,3))
qplot(data = only_score,x=Group, y=RLG)
qplot(data = only_score,x=Group, y=RLG, geom="boxplot")
anova(lm(data = only_score, RLG~Group))
shapiro.test(only_score$RLG)
aov(data = only_score, RLG~Group)
summary(aov(data = only_score, RLG~Group))
summary(aov(data = only_score, RLG~Group))
summary(data_on)
summary(only_score$RLG)
cor.test(only_score$Pre_tot_Score,only_score$Post_tot_Score)
cor.test(only_score$Pre_tot_Score,only_score$RLG)
qplot(data=only_score,x=Group,y=Exp_tot_Score,geom="boxplot")
cor.test(only_score$Spring_tot,only_score$RLG)
cor.test(only_score$Spring_tot,only_score$Post_tot_Score)
cor.test(only_score$Pre1_MRT,only_score$Post_tot_Score)
cor.test(only_score$Pre1_MRT,only_score$Exp_tot_Score)
cor.test(only_score$GLR,only_score$Exp_tot_Score)
cor.test(only_score$RLG,only_score$Exp_tot_Score)
cor.test(only_score$Post_tot_Score,only_score$Exp_tot_Score)
cor.test(only_score$Pre_tot_Score,only_score$Exp_tot_Score)
cor.test(only_score$RLG,only_score$RLG)
cor.test(only_score$RLG,only_score$Pre1_MRT)
cor.test(only_score$Spring_tot,only_score$Pre1_MRT)
cor.test(only_score$Spring_tot,only_score$Pre_tot_Score)
cor.test(only_score$Spring_tot,only_score$Post_tot_Score)
only_score[,c(1,2,35:42)]
experiment_score=only_score[,c(1,2,35:42)]
library(reshape)
library(reshape2)
experiment_score=melt(experiment_score,id.vars = c(1,2))
View(experiment_score)
qplot(data=experiment_score, x=variable,y=value,fill=Group, geom="boxplot")
qplot(data=experiment_score, x=variable,y=value,fill=Group, geom="line")
qplot(data=experiment_score, x=variable,y=value,fill=Group, geom="smooth")
qplot(data=experiment_score, x=variable,y=value,fill=Group, geom="point")
qplot(data=experiment_score, x=variable,y=value,fill=Group, geom="smooth")
qplot(data=experiment_score, x=variable,y=value,fill=Group, geom="smooth",method="lm")
qplot(data=experiment_score, x=variable,y=value, geom="smooth",method="lm")
qplot(data=experiment_score, x=variable,y=value,fill=Group, geom="boxplot")
glm
glm(data=experiment_score,vaule~variable,family=poisson())
glm(data=experiment_score,value~variable,family=poisson())
summary(glm(data=experiment_score,value~variable,family=poisson()))
View(experiment_score)
View(only_score)
post_data=only_score[,c(1,2,47:53)]
qplot(data=post_data, x=variable,y=value,fill=Group, geom="boxplot")
View(post_data)
post_data=melt(post_data,id.vars = c(1,2))
qplot(data=post_data, x=variable,y=value,fill=Group, geom="boxplot")
pre_data=only_score[,c(1,2,24:30)]
pre_data=melt(pre_data,id.vars = c(1,2))
pre_post_data=merge(pre_data,post_data)
pre_post_data=merge(pre_data,post_data,by = c(1,2))
View(pre_post_data)
pre_data$variable=substr(pre_data$variable,4,nchar(pre_data$variable))
pre_data$variable=as.character(pre_data$variable)
pre_data$variable=substr(pre_data$variable,4,nchar(pre_data$variable))
pre_data$variable=as.factor(pre_data$variable)
post_data$variable=as.character(post_data$variable)
post_data$variable=substr(post_data$variable,5,nchar(post_data$variable))
post_data$variable=as.factor(post_data$variable)
pre_data=melt(pre_data,id.vars = c(1,2,3))
View(pre_data)
View(post_data)
View(pre_data)
pre_data[,4]=null
pre_data[,4]<-null
pre_data[,-4]
pre_data=pre_data[,-4]
pre_post_data=merge(pre_data,post_data)
View(pre_post_data)
pre_post_data=merge(pre_data,post_data,by = c(1,2))
View(pre_post_data)
pre_post_data=merge(pre_data,post_data,by = c(1,2,3))
View(pre_post_data)
qplot(data=post_data, x=variable,y=value.y-value.x,fill=Group, geom="boxplot")
qplot(data=pre_post_data, x=variable,y=value.y-value.x,fill=Group, geom="boxplot")
pre_post_data$RLG=pre_post_data$value.y-pre_post_data$value.x
pre_post_data$RLG=ifelse(pre_post_data$RLG<0, pre_post_data$RLG/pre_post_data$value.x,pre_post_data$RLG/(3-pre_post_data$value.x) )
qplot(data=post_data, x=variable,y=RLG,fill=Group, geom="boxplot")
qplot(data=pre_post_data, x=variable,y=RLG,fill=Group, geom="boxplot")
View(pre_post_data)
pre_post_data$RLG=pre_post_data$value.y-pre_post_data$value.x
pre_post_data$RLG=ifelse(pre_post_data$RLG<=0, pre_post_data$RLG/pre_post_data$value.x,pre_post_data$RLG/(3-pre_post_data$value.x) )
qplot(data=pre_post_data, x=variable,y=RLG,fill=Group, geom="boxplot")
View(pre_post_data)
View(only_score)
View(experiment_score)
qplot(data=experiment_score, x=variable,y=value,fill=Group, geom="boxplot")
qplot(data=experiment_score, x=variable,y=value, geom="boxplot")
qplot(data=experiment_score, x=variable,y=value, geom="boxplot")+geom_violin()
qplot(data=experiment_score, x=variable,y=value, geom="boxplot")+geom_violin()+geom_dotplot(binaxis='y', stackdir='center', dotsize=1)
qplot(data=experiment_score, x=variable,y=value, geom="boxplot")+geom_violin()+geom_jitter(shape=16, position=position_jitter(0.2))
qplot(data=experiment_score, x=variable,y=value, geom="boxplot")+geom_violin()
qplot(data=experiment_score, x=variable,y=value)+geom_violin()
experiment_score$Trial=ifelse(experiment_score$variable="Exp_1_Score",1,2)
experiment_score$Trial=ifelse(experiment_score$variable=="Exp_1_Score",1,2)
View(experiment_score)
experiment_score$Trial=ifelse(experiment_score$variable=="Exp_1_Score",1,ifelse(experiment_score$variable=="Exp_2_Score",2,ifelse(experiment_score$variable=="Exp_3_Score",3,ifelse(experiment_score$variable=="Exp_4_Score",4,ifelse(experiment_score$variable=="Exp_5_Score",5,ifelse(experiment_score$variable=="Exp_6_Score",6,ifelse(experiment_score$variable=="Exp_7_Score",7,8)))))))
cor.test(experiment_score$Trial,experiment_score$value)
cor.test(experiment_score$Trial,experiment_score$value,method = "s")
summray(glm(experiment_score,value~Group*Trial,family=poisson()))
summaray(glm(experiment_score,value~Group*Trial,family=poisson()))
summary(glm(experiment_score,value~Group*Trial,family=poisson()))
summary(glm(experiment_score,value~Group,family=poisson()))
summary(glm(data=experiment_score,value~Group*Trial,family=poisson()))
plot(glm(data=experiment_score,value~Group*Trial,family=poisson()))
plot(glm(data=experiment_score,value~Group*Trial,family=gaussia()))
plot(glm(data=experiment_score,value~Group*Trial,family=gaussian()))
summary(glm(data=experiment_score,value~Group*Trial,family=gaussian()))
summary(glm(data=experiment_score,value~Group*variable,family=poisson()))
summary(glm(data=experiment_score,value~variable,family=poisson()))
plot(glm(data=experiment_score,value~variable,family=poisson()))
plot(glm(data=experiment_score,value~variable,family=quasipoisson()))
hist(experiment_score$value)
plot(glm(data=experiment_score,value~variable,family=quasipoisson()))
m=(glm(data=experiment_score,value~variable,family=quasipoisson()))
multcomp::glht(m)
summary(multcomp::glht(m))
summary(multcomp::glht(m,mcp(rank="Tukey"))
)
summary(multcomp::glht(m,mcp(rank="Tukey")))
summary(multcomp::glht(m,mcp(variable="Tukey")))
qplot(data=experiment_score, x=variable,y=value, geom="bar")
qplot(data=experiment_score, x=variable,y=value, geom="barplot")
qplot(data=experiment_score, x=variable,y=value, geom="bar")
qplot(data=experiment_score, x=variable,  geom="bar")
qplot(data=experiment_score, x=variable, group=value, geom="bar")
qplot(data=experiment_score, x=variable, group=value, geom="histogram")
qplot(data=experiment_score, x=variable, group=value, geom="count")
qplot(data=experiment_score, x=variable, group=value)
qplot(data=experiment_score, x=variable, fill=value)
qplot(data=experiment_score, x=variable, fill=value,geom="bar")
experiment_score%>%group_by(c("Group","variable","value"))
experiment_score%>%group_by(c("Group","variable","value"))%>%summarise(test=n())
experiment_score%>%dplyr::group_by(c("Group","variable","value"))%>%summarise(test=n())
experiment_score%>%dplyr::group_by(Group,variable,value))%>%summarise(test=n())
ggplot(d,aes(x=Var2,y=Var1))+
stat_density2d(aes(fill=value)) +
scale_fill_gradient(low="blue", high="green")
image(kde2d(d$Var2,d$Var1),col=r)
qplot(data=d,x=Var2,y=Var1,color=value)
ggplot(d,aes(x=Var2,y=Var1))+
stat_bin2d(aes(fill=value)) +
scale_fill_gradient(low="blue", high="green")
ggplot(d,aes(x=Var2,y=Var1))+
stat_bin2d(aes(fill=value),stat="identity'") +
scale_fill_gradient(low="blue", high="green")
ggplot(d,aes(x=Var2,y=Var1))+
stat_bin2d(aes(fill=value),geom="identity'") +
scale_fill_gradient(low="blue", high="green")
qplot(data=d,x=Var2,y=Var1,color=value)
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="blue", high="green")
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="blue", high="red")
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="white", high="red")
kde2d(d$Var1,d$Var2,1000*d$value+0.0001)
image(kde2d(d$Var2,d$Var1,1000*d$value),col=r)
image(kde2d(d$Var2,d$Var1,1000*d$value+1),col=r)
image(kde2d(d$Var2,d$Var1,1000*d$value+1))
library
(imager)
installed.packages("imager")
install.packages("imager")
library("imager")
as.cimg(saliency_map)
ser=as.cimg(saliency_map)
plot(ser)
plot(isoblur(ser,sigma = 10))
d=melt(ser)
d=melt(as.matrix(ser))
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="white", high="red")
d=melt(as.matrix(isoblur(ser,sigma = 10)))
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="white", high="red")
d=melt(as.matrix(isoblur(ser,sigma = 5)))
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="white", high="red")
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()
qplot(data=d,x=Var2,y=Var1,color=value,alpha=0.5)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="white", high="red",alpha=0.5)+scale_y_reverse()+theme
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+ annotation_custom(img, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+ annotation_custom(rasterGrob(read.jpg("Models/1.JPG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)
library(png)
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+ annotation_custom(rasterGrob(read.jpg("Models/1.JPG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)
library(grid)
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+ annotation_custom(rasterGrob(read.jpg("Models/1.JPG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+ annotation_custom(rasterGrob(read("Models/1.JPG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+ annotation_custom(rasterGrob(read.bmp("Models/1.AOI.BMP"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+ annotation_custom(rasterGrob(read.png("Models/1.PNG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)
qplot(data=d,x=Var2,y=Var1,color=value)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point()
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point(aes(alpha=value))
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point(aes(alpha=value>0))
qplot(data=subset(d,value>0),x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point(aes(alpha=value>0))
qplot(data=subset(d,value>0),x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point()
subset(d,value>0)
subset(d,value>0.1)
qplot(data=subset(d,value>0.1),x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point()
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point()
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point(alpha=0.5)
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE) , xmin=0, xmax=width, ymin=0, ymax=height)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point(alpha=0.5)
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point(alpha=0.5)
qplot(data=d,x=Var2,y=Var1,color=value,alpha=0.5)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point()
d=melt(as.matrix(isoblur(ser,sigma = 10)))
qplot(data=d,x=Var2,y=Var1,color=value,alpha=0.5)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point()
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point(alpha=0.3)
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point(alpha=0.3)
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point(alpha=0.5)
img=read.bmp("Models/1.AOI.res.BMP");
width=dim(img)[1]
height=dim(img)[2]
test=merge(Saliency_Expert,AOI_Codes,by.x = "primary.AOI",by.y = "AOI" )
saliency_map=matrix(nrow = width,ncol = height,data = 0)
test1=subset(test,Trial==1)
for(r in c(1:nrow(test1))){
red=test1[r,"r"]
blue=test1[r,"b"]
saliency_map[which(img[,,1]==red & img[,,3]==blue,arr.ind = T)]= test1[r,"meanFixProp"]
}
colnames(saliency_map)=c(1:height)
rownames(saliency_map)=c(1:width)
ser=as.cimg(saliency_map)
d=melt(as.matrix(isoblur(ser,sigma = 10)))
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point(alpha=0.5)
img=read.bmp("Models/1.AOI.res.BMP");
width=dim(img)[1]
height=dim(img)[2]
test=merge(Saliency_Expert,AOI_Codes,by.x = "primary.AOI",by.y = "AOI" )
saliency_map=matrix(nrow = width,ncol = height,data = 0)
test1=subset(test,Trial==1)
for(r in c(1:nrow(test1))){
red=test1[r,"r"]
blue=test1[r,"b"]
saliency_map[which(img[,,1]==red & img[,,3]==blue,arr.ind = T)]= test1[r,"meanFixProp"]
}
colnames(saliency_map)=c(1:height)
rownames(saliency_map)=c(1:width)
ser=as.cimg(saliency_map)
d=melt(as.matrix(isoblur(ser,sigma = 10)))
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse(limits = c(0, height))+theme_void()+geom_point(alpha=0.5)+scale_x_continuous(limits = c(0, width))
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse(limits = c(0, height))+theme_void()+geom_point(alpha=0.5)
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point(alpha=0.5)
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse(limits = c(0, width))+theme_void()+geom_point(alpha=0.5)+scale_x_continuous(limits = c(0, height))
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse(limits = c(0, 300))+theme_void()+geom_point(alpha=0.5)+scale_x_continuous(limits = c(0, 169))
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point(alpha=0.5)+scale_x_continuous(limits = c(0, 169))
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse()+theme_void()+geom_point(alpha=0.5)+scale_x_continuous(limits = c(0, 300))
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse(limits = c(0, 169))+theme_void()+geom_point(alpha=0.5)+scale_x_continuous(limits = c(0, 300))
qplot(data=d,x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_point(alpha=0.5)+scale_x_continuous(limits = c(0, 300))
qplot(data=subset(d,value>0.01),x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_point(alpha=0.5)+scale_x_continuous(limits = c(0, 300))
qplot(data=subset(d,value>0.01),x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_point(alpha=0.5)+scale_x_continuous(limits = c(0, 300))+position_dodge()
qplot(data=subset(d,value>0.01),x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_point(alpha=0.5)+scale_x_continuous(limits = c(0, 300))+position_dodge(width=0.5)
qplot(data=subset(d,value>0.01),x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_point(alpha=0.5,size=1)+scale_x_continuous(limits = c(0, 300))
qplot(data=subset(d,value>0.01),x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_point(alpha=0.5,size=0.1)+scale_x_continuous(limits = c(0, 300))
qplot(data=subset(d,value>0.01),x=Var2,y=Var1,color=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_tile(alpha=0.5)+scale_x_continuous(limits = c(0, 300))
qplot(data=subset(d,value>0.01),x=Var2,y=Var1,fill=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_color_gradient(low="white", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_tile(alpha=0.5)+scale_x_continuous(limits = c(0, 300))
qplot(data=subset(d,value>0.01),x=Var2,y=Var1,fill=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_fill_gradient(low="white", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_tile(alpha=0.5)+scale_x_continuous(limits = c(0, 300))
qplot(data=subset(d,value>0.01),x=Var2,y=Var1,fill=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_fill_gradient(low="blue", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_tile(alpha=0.5)+scale_x_continuous(limits = c(0, 300))
qplot(data=subset(d,value>0.01),x=Var2,y=Var1,fill=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_fill_gradient(low="blue",mid="green", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_tile(alpha=0.5)+scale_x_continuous(limits = c(0, 300))
qplot(data=subset(d,value>0.01),x=Var2,y=Var1,fill=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_fill_gradientn(low="blue",mid="green", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_tile(alpha=0.5)+scale_x_continuous(limits = c(0, 300))
qplot(data=subset(d,value>0.01),x=Var2,y=Var1,fill=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_fill_gradient2(low="blue",mid="green", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_tile(alpha=0.5)+scale_x_continuous(limits = c(0, 300))
qplot(data=d,x=Var2,y=Var1,fill=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_fill_gradient2(low="blue",mid="green", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_tile(alpha=0.5)+scale_x_continuous(limits = c(0, 300))
qplot(data=d,x=Var2,y=Var1,fill=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_fill_gradient2(low="white",mid="yellow", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_tile(alpha=0.5)+scale_x_continuous(limits = c(0, 300))
View(test)
View(test1)
qplot(data=d,x=Var2,y=Var1,fill=exp(value))+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_fill_gradient2(low="white",mid="yellow", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_tile(alpha=0.5)+scale_x_continuous(limits = c(0, 300))
qplot(data=d,x=Var2,y=Var1,fill=value)+ annotation_custom(rasterGrob(readPNG("Models/1.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_fill_gradient2(low="white",mid="yellow", high="red")+scale_y_reverse(limits = c(169,0))+theme_void()+geom_tile(alpha=0.5)+scale_x_continuous(limits = c(0, 300))
AOI_Codes=read.csv("Models/AOI_codes.csv",header = F,na.strings = "qqqq")
colnames(AOI_Codes)=c("AOI","r","b")
img=read.bmp("Models/5.AOI.res.BMP");
width=dim(img)[1]
height=dim(img)[2]
test=merge(Saliency_Expert,AOI_Codes,by.x = "primary.AOI",by.y = "AOI" )
saliency_map=matrix(nrow = width,ncol = height,data = 0)
test1=subset(test,Trial==5)
for(r in c(1:nrow(test1))){
red=test1[r,"r"]
blue=test1[r,"b"]
saliency_map[which(img[,,1]==red & img[,,3]==blue,arr.ind = T)]= test1[r,"meanFixProp"]
}
colnames(saliency_map)=c(1:height)
rownames(saliency_map)=c(1:width)
ser=as.cimg(saliency_map)
d=melt(as.matrix(isoblur(ser,sigma = 10)))
qplot(data=d,x=Var2,y=Var1,fill=value)+ annotation_custom(rasterGrob(readPNG("Models/5.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_fill_gradient2(low="white",mid="yellow", high="red")+scale_y_reverse(limits = c(width,0))+theme_void()+geom_tile(alpha=0.5)+scale_x_continuous(limits = c(0, height))
ser=as.cimg(saliency_map)
d=melt(as.matrix(isoblur(ser,sigma = 10)))
qplot(data=d,x=Var2,y=Var1,fill=value)+ annotation_custom(rasterGrob(readPNG("Models/5.PNG"), interpolate=TRUE,width = unit(1,"npc"),
height = unit(1,"npc")) , xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
scale_fill_gradient2(low="white",mid="yellow", high="red")+scale_y_reverse(limits = c(width,0))+theme_void()+geom_tile(alpha=0.5)+scale_x_continuous(limits = c(0, height))
