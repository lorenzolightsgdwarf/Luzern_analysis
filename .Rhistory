install.packages("stringr")
install.packages(c("adehabitatLT", "plyr", "dplyr", "ggplot2", "MASS", "lme4", "pscl", "gvlma", "multcomp", "splancs"))
install.packages(c("png", "caret", "pROC", "rpart.plot", "rattle", "amap", "RColorBrewer", "jsonlite"))
library("stringr")
library(adehabitatLT)
library(plyr)
library("dplyr")
library(ggplot2)
library("MASS")
library("lme4")
library("pscl")
library(gvlma)
library("multcomp")
library("splancs")
library("png")
library(caret)
library(pROC)
library(rpart.plot)
library(rattle)
library(amap)
library(RColorBrewer)
install.packages("coin")
install.packages("colorspace")
friedman.test.with.post.hoc=function(formu, data, to.print.friedman = T, to.post.hoc.if.signif = T,  to.plot.parallel = T, to.plot.boxplot = T, signif.P = .05, color.blocks.in.cor.plot = T, jitter.Y.in.cor.plot =F)
{
# formu is a formula of the shape: 	Y ~ X | block
# data is a long data.frame with three columns:    [[ Y (numeric), X (factor), block (factor) ]]
# Note: This function doesn't handle NA's! In case of NA in Y in one of the blocks, then that entire block should be removed.
# Loading needed packages
if(!require(coin))
{
print("You are missing the package 'coin', we will now try to install it...")
install.packages("coin")
library(coin)
}
if(!require(multcomp))
{
print("You are missing the package 'multcomp', we will now try to install it...")
install.packages("multcomp")
library(multcomp)
}
if(!require(colorspace))
{
print("You are missing the package 'colorspace', we will now try to install it...")
install.packages("colorspace")
library(colorspace)
}
# get the names out of the formula
formu.names <- all.vars(formu)
Y.name <- formu.names[1]
X.name <- formu.names[2]
block.name <- formu.names[3]
if(dim(data)[2] >3) data <- data[,c(Y.name,X.name,block.name)]	# In case we have a "data" data frame with more then the three columns we need. This code will clean it from them...
# Note: the function doesn't handle NA's. In case of NA in one of the block T outcomes, that entire block should be removed.
# stopping in case there is NA in the Y vector
if(sum(is.na(data[,Y.name])) > 0) stop("Function stopped: This function doesn't handle NA's. In case of NA in Y in one of the blocks, then that entire block should be removed.")
# make sure that the number of factors goes with the actual values present in the data:
data[,X.name ] <- factor(data[,X.name ])
data[,block.name ] <- factor(data[,block.name ])
number.of.X.levels <- length(levels(data[,X.name ]))
if(number.of.X.levels == 2) { warning(paste("'",X.name,"'", "has only two levels. Consider using paired wilcox.test instead of friedman test"))}
# making the object that will hold the friedman test and the other.
the.sym.test <- symmetry_test(formu, data = data,	### all pairwise comparisons
teststat = "max",
xtrafo = function(Y.data) { trafo( Y.data, factor_trafo = function(x) { model.matrix(~ x - 1) %*% t(contrMat(table(x), "Tukey")) } ) },
ytrafo = function(Y.data){ trafo(Y.data, numeric_trafo = rank, block = data[,block.name] ) }
)
# if(to.print.friedman) { print(the.sym.test) }
if(to.post.hoc.if.signif)
{
if(pvalue(the.sym.test) < signif.P)
{
# the post hoc test
The.post.hoc.P.values <- pvalue(the.sym.test, method = "single-step")	# this is the post hoc of the friedman test
# plotting
if(to.plot.parallel & to.plot.boxplot)	par(mfrow = c(1,2)) # if we are plotting two plots, let's make sure we'll be able to see both
if(to.plot.parallel)
{
X.names <- levels(data[, X.name])
X.for.plot <- seq_along(X.names)
plot.xlim <- c(.7 , length(X.for.plot)+.3)	# adding some spacing from both sides of the plot
if(color.blocks.in.cor.plot)
{
blocks.col <- rainbow_hcl(length(levels(data[,block.name])))
} else {
blocks.col <- 1 # black
}
data2 <- data
if(jitter.Y.in.cor.plot) {
data2[,Y.name] <- jitter(data2[,Y.name])
par.cor.plot.text <- "Parallel coordinates plot (with Jitter)"
} else {
par.cor.plot.text <- "Parallel coordinates plot"
}
# adding a Parallel coordinates plot
matplot(as.matrix(reshape(data2,  idvar=X.name, timevar=block.name,
direction="wide")[,-1])  ,
type = "l",  lty = 1, axes = FALSE, ylab = Y.name,
xlim = plot.xlim,
col = blocks.col,
main = par.cor.plot.text)
axis(1, at = X.for.plot , labels = X.names) # plot X axis
axis(2) # plot Y axis
points(tapply(data[,Y.name], data[,X.name], median) ~ X.for.plot, col = "red",pch = 4, cex = 2, lwd = 5)
}
if(to.plot.boxplot)
{
# first we create a function to create a new Y, by substracting different combinations of X levels from each other.
subtract.a.from.b <- function(a.b , the.data)
{
the.data[,a.b[2]] - the.data[,a.b[1]]
}
temp.wide <- reshape(data,  idvar=X.name, timevar=block.name,
direction="wide") 	#[,-1]
wide.data <- as.matrix(t(temp.wide[,-1]))
colnames(wide.data) <- temp.wide[,1]
Y.b.minus.a.combos <- apply(with(data,combn(levels(data[,X.name]), 2)), 2, subtract.a.from.b, the.data =wide.data)
names.b.minus.a.combos <- apply(with(data,combn(levels(data[,X.name]), 2)), 2, function(a.b) {paste(a.b[2],a.b[1],sep=" - ")})
the.ylim <- range(Y.b.minus.a.combos)
the.ylim[2] <- the.ylim[2] + max(sd(Y.b.minus.a.combos))	# adding some space for the labels
is.signif.color <- ifelse(The.post.hoc.P.values < .05 , "green", "grey")
boxplot(Y.b.minus.a.combos,
names = names.b.minus.a.combos ,
col = is.signif.color,
main = "Boxplots (of the differences)",
ylim = the.ylim
)
legend("topright", legend = paste(names.b.minus.a.combos, rep(" ; PostHoc P.value:", number.of.X.levels),round(The.post.hoc.P.values,5)) , fill =  is.signif.color )
abline(h = 0, col = "blue")
}
list.to.return <- list(Friedman.Test = the.sym.test, PostHoc.Test = The.post.hoc.P.values)
if(to.print.friedman) {print(list.to.return)}
return(list.to.return)
}	else {
print("The results where not significant, There is no need for a post hoc test")
return(the.sym.test)
}
}
# Original credit (for linking online, to the package that performs the post hoc test) goes to "David Winsemius", see:
# http://tolstoy.newcastle.edu.au/R/e8/help/09/10/1416.html
}
load("~/.RData")
setwd("~/Luzern_analysis")
load("~/Luzern_analysis/.RData")
View(raw_data_copy)
tmp=raw_data_copy
paste(tmp[,seq(11,52,2)],tmp[,seq(11,52,2)]+1)
paste(tmp[,seq(11,52,2)],tmp[,seq(11,52,2)])
tmp[,seq(11,52,2)]
for(j in seq(11,52,2))
tmp[,j]=paste(tmp[,j],tmp[,j+1])
View(tmp)
tmp=raw_data_copy
tmp=raw_data_copy
for(j in seq(11,52,2))
tmp[,j]=paste(tmp[,j+1],tmp[,j])
for(j in seq(174,215,2))
tmp[,j]=paste(tmp[,j+1],tmp[,j])
for(j in seq(53,100,2))
tmp[,j]=paste(tmp[,j+1],tmp[,j])
View(tmp)
tmp=tmp[,c(1,2,seq(11,52,2),seq(174,215,2),seq(53,100,2))]
reshape2::melt(tmp,c(1,2))
tmp=reshape2::melt(tmp,c(1,2))
summary(tmp$variable)
(tmp$variable)
tmp$variable=ifelse(grepl(as.character(tmp$variable),pattern = "Pre"),"Pre",ifelse(grepl(as.character(tmp$variable),pattern = "Post"),"Post","Exp"))
tmp%>%dplyr::group_by(ID,Group,variable,value)%>%dplyr::summarise(count=n())
library(dplyr)
tmp%>%dplyr::group_by(ID,Group,variable,value)%>%dplyr::summarise(count=n())
tmp=tmp%>%dplyr::group_by(ID,Group,variable,value)%>%dplyr::summarise(count=n())
qplot(data=tmp,x=value,y=count,facets=.~variable,fill=Group,geom="boxplot")
library(ggplot2)
qplot(data=tmp,x=value,y=count,facets=.~variable,fill=Group,geom="boxplot")
m=glmer(data=tmp,count~value+(1|variable),family=poisson())
library(lmer4)
library(lme4)
m=glmer(data=tmp,count~value+(1|variable),family=poisson())
summary(m)
library(lsmeans)
plot(m)
qqnorm(residuals(m))
qqline(residuals(m))
lsmeans(m, pairwise~value)
m=glm(data=tmp,count~value,family=quasipoisson())
m
summary(m)
plot(m)
lsmeans(m, pairwise~value)
lsmeans(m, pairwise~value)
qplot(data=subset(tmp,value=="Druck/Compression Null/Zero" || value=="Druck/Compression Zug/Tension"),x=value,y=count,facets=.~variable,fill=Group,geom="boxplot")
subset(tmp,value=="Druck/Compression Null/Zero" || value=="Druck/Compression Zug/Tension")
subset(tmp,value=="Druck\/Compression\ Null\/Zero" || value=="Druck/Compression Zug/Tension")
subset(tmp,value=="Druck/Compression Null/Zero" || value=="Druck/Compression Zug/Tension")
subset(tmp,value=="Druck/Compression Null/Zero")
subset(tmp,value=="Druck/Compression Zug/Tension")
qplot(data=subset(tmp,value=="Druck/Compression Null/Zero" | value=="Druck/Compression Zug/Tension"),x=value,y=count,facets=.~variable,fill=Group,geom="boxplot")
m=glm(data=tmp,count~value*variable,family=quasipoisson())
summary(m)
plot(m)
lsmeans(m, pairwise~value|variable)
qplot(data=only_score,x=Group,y=RLG,geom="boxplot",fill=Group)+labs(x="Feedback",y="Relative Learning Gain")+
scale_x_discrete( labels=c("Tangible","Verbal"))+ guides(fill=FALSE)+theme(text = element_text(size=20))
qplot(data=only_score,x=Group,y=RLG,geom="boxplot",fill=Group)+labs(x="Feedback",y="Relative Learning Gain")+
scale_x_discrete( labels=c("Tangible","Verbal"))+ guides(fill=FALSE)+theme(text = element_text(size=20))+geom_point()
qplot(data=only_score,x=Group,y=RLG,geom="boxplot",fill=Group)+labs(x="Feedback",y="Relative Learning Gain")+
scale_x_discrete( labels=c("Tangible","Verbal"))+ guides(fill=FALSE)+theme(text = element_text(size=20))+geom_point(size=1)
qplot(data=only_score,x=Group,y=RLG,geom="boxplot",fill=Group)+labs(x="Feedback",y="Relative Learning Gain")+
scale_x_discrete( labels=c("Tangible","Verbal"))+ guides(fill=FALSE)+theme(text = element_text(size=20))+geom_point(size=2)
ggplot(experiment_score_summary, aes(x=as.numeric(variable), y=meanD, colour=Group)) +
geom_errorbar(aes(ymin=meanD-ci, ymax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_line(position=position_dodge(0.1),size=1) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Trial",y="Score")+
scale_x_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+
geom_segment(aes(x=4,xend=4,y=3,yend=2.95),color="black",size=0.1)+annotate("text",x=4,y=3.08,label="t=2.99, p=0.003")+
geom_segment(aes(x=8,xend=8,y=3,yend=2.95),color="black",size=0.1)+annotate("text",x=8,y=3.08,label="t=4.45, p<0.0001")
experiment_score_summary=experiment_score%>%dplyr::group_by(Group,variable)%>%dplyr::summarise(meanD=mean(value), ci=1.96*sd(value)/(sqrt(n())))
ggplot(experiment_score_summary, aes(x=as.numeric(variable), y=meanD, colour=Group)) +
geom_errorbar(aes(ymin=meanD-ci, ymax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_line(position=position_dodge(0.1),size=1) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Trial",y="Score")+
scale_x_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+
geom_segment(aes(x=4,xend=4,y=3,yend=2.95),color="black",size=0.1)+annotate("text",x=4,y=3.08,label="t=2.99, p=0.003")+
geom_segment(aes(x=8,xend=8,y=3,yend=2.95),color="black",size=0.1)+annotate("text",x=8,y=3.08,label="t=4.45, p<0.0001")
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbar(aes(ymin=meanD-ci, ymax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_line(position=position_dodge(0.1),size=1) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Trial",y="Score")+
scale_y_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+
geom_segment(aes(x=4,xend=4,y=3,yend=2.95),color="black",size=0.1)+annotate("text",x=4,y=3.08,label="t=2.99, p=0.003")+
geom_segment(aes(x=8,xend=8,y=3,yend=2.95),color="black",size=0.1)+annotate("text",x=8,y=3.08,label="t=4.45, p<0.0001")
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbar(aes(ymin=meanD-ci, ymax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_line(position=position_dodge(0.1),size=1) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Trial",y="Score")+
scale_y_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbar(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_line(position=position_dodge(0.1),size=1) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Trial",y="Score")+
scale_y_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_line(position=position_dodge(0.1),size=1) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Trial",y="Score")+
scale_y_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))
ggplot(experiment_score_summary, aes(y=(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_line(position=position_dodge(0.1),size=1) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Trial",y="Score")+
scale_y_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Trial",y="Score")+
scale_y_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_bw()
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic()
20
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)+
annotate("text",x=4,y=3.08,label="t=2.99, p=0.003",size=5)+
#
dist_scores=only_score[,c(1,2,66:68)]
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)+
annotate("text",x=4,y=3.08,label="t=2.99, p=0.003",size=5)
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)+
annotate("text",x=2,y=4.10,label="t=2.99, p=0.003",size=5)
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)+
annotate("text",x=2,y=4.50,label="t=2.99, p=0.003",size=5)
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = seq(1,8,0.5))+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)+
annotate("text",x=2,y=4.50,label="t=2.99, p=0.003",size=5)
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8),)+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)+
annotate("text",x=2,y=4.50,label="t=2.99, p=0.003",size=5)
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8),)+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)+
annotate("text",x=2,y=4.50,label="t=2.99, p=0.003",size=5,rotate=90)
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8),)+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)+
annotate("text",x=2,y=4.50,label="t=2.99, p=0.003",size=5,angle=90)
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8),)+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)+
annotate("text",x=2,y=4.50,label="t=2.99, p=0.003",size=5,angle=-90)
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8),)+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)+
annotate("text",x=3,y=4.0,label="t=2.99, p=0.003",size=5,angle=-90)
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8),)+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)+
annotate("text",x=3,y=4.0,label="t=2.99, p=0.003",size=3,angle=-90)
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8),)+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)+
annotate("text",x=3,y=4.0,label="t=2.99, p=0.003",size=4,angle=-90)
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8),)+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)+
annotate("text",x=3,y=4.0,label="t=2.99, p=0.003",size=4,angle=-90)+
annotate("text",x=3,y=8.0,label="t=4.45, p<0.0001",size=4,angle=-90)+
#
dist_scores=only_score[,c(1,2,66:68)]
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8),)+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)+
annotate("text",x=3,y=4.0,label="t=2.99, p=0.003",size=4,angle=-90)+
annotate("text",x=3,y=8.0,label="t=4.45, p<0.0001",size=4,angle=-90)
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8),)+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)+
annotate("text",x=3,y=4.0,label="t=2.99, p=0.003",size=4,angle=-90)+
annotate("text",x=3.1,y=8.0,label="t=4.45, p<0.0001",size=4,angle=-90)
ggplot(experiment_score_summary, aes(y=as.numeric(variable), x=meanD, colour=Group)) +
geom_errorbarh(aes(xmin=meanD-ci, xmax=meanD+ci), width=.5, position=position_dodge(0.1)) +
geom_point(position=position_dodge(0.1),size=2)+labs(x="Score",y="Trial")+
scale_y_continuous(breaks = c(1:8),)+
scale_color_discrete(name="Feedback", labels=c("Tangible","Verbal"))+theme(text = element_text(size=20))+theme_classic(base_size = 20)+
annotate("text",x=3.1,y=4.0,label="t=2.99, p=0.003",size=4,angle=-90)+
annotate("text",x=3.1,y=8.0,label="t=4.45, p<0.0001",size=4,angle=-90)
exploration_time=read.csv("Exploration time.csv")
View(exploration_time)
exploration_time=read.csv("Exploration time.csv",na.strings = "na")
exploration_time[,c(3:10)]=as.numeric(exploration_time[,c(3:10)])
exploration_time[,c(3:10)]
exploration_time$Trial.1=as.numeric(exploration_time$Trial.1)
exploration_time$Trial.2=as.numeric(exploration_time$Trial.2)
exploration_time$Trial.3=as.numeric(exploration_time$Trial.3)
exploration_time$Trial.5=as.numeric(exploration_time$Trial.4)
exploration_time=read.csv("Exploration time.csv",na.strings = "na")
exploration_time$Trial.1=as.numeric(exploration_time$Trial.1)
exploration_time$Trial.2=as.numeric(exploration_time$Trial.2)
exploration_time$Trial.3=as.numeric(exploration_time$Trial.3)
exploration_time$Trial.4=as.numeric(exploration_time$Trial.4)
exploration_time$Trial.5=as.numeric(exploration_time$Trial.5)
exploration_time$Trial.6=as.numeric(exploration_time$Trial.6)
exploration_time$Trial.7=as.numeric(exploration_time$Trial.7)
exploration_time$Trial.8=as.numeric(exploration_time$Trial.8)
exploration_time_with_replace=exploration_time
median(sunset(exploration_time_with_replace,Condition=="tangible")$Trial.1)
median(subset(exploration_time_with_replace,Condition=="tangible")$Trial.1)
median(subset(exploration_time_with_replace,Condition=="tangible")$Trial.1,na.rm = T)
View(exploration_time_with_replace)
exploration_time_with_replace[22,3]=120
median(subset(exploration_time_with_replace,Condition!="tangible")$Trial.7,na.rm = T)
exploration_time_with_replace[7,9]=70
View(DF_Learner)
View(only_score)
only_score[,c("ID","RLG","Post_test_score")]
View(only_score)
only_score[,c("ID","RLG","Post_tot_score")]
only_score[,c("ID","RLG","Post_tot_Score")]
only_score[,c("ID","RLG","Post_tot_Score","Exp_tot_Score")]
merge(exploration_time_with_replace,only_score[,c("ID","RLG","Post_tot_Score","Exp_tot_Score")],by="ID")
exploration_time_with_replace=merge(exploration_time_with_replace,only_score[,c("ID","RLG","Post_tot_Score","Exp_tot_Score")],by="ID")
qplot(data=exploration_time_with_replace,x=Trial.1,y=RLG,facets = .~Condition,geom="point")
cor.test(exploration_time_with_replace$Trial.1,exploration_time_with_replace$RLG)
cor.test(exploration_time_with_replace$Trial.1,exploration_time_with_replace$Post_tot_Score)
cor.test(exploration_time_with_replace$Trial.1,exploration_time_with_replace$Exp_tot_Score)
m=lm(data=subset(exploration_time_with_replace,Condition!="tangible"),RLG~Trial.1+Trial.2+Trial.3+Trial.4+Trial.5+Trial.6+Trial.7)
summary(m)
step(m)
library(MASS)
step <- stepAIC(fit, direction="both")
step <- stepAIC(m, direction="both")
step$anova
m=lm(data=subset(exploration_time_with_replace,Condition=="tangible"),RLG~Trial.1+Trial.2+Trial.3+Trial.4+Trial.5+Trial.6+Trial.7)
summary(m)
step <- stepAIC(m, direction="both")
step$anova
library(leaps)
cor.test(exploration_time_with_replace,Condition=="tangible")$Trial.1,exploration_time_with_replace,Condition=="tangible")$RLG)
cor.test(subset(exploration_time_with_replace,Condition=="tangible")$Trial.1,subset(exploration_time_with_replace,Condition=="tangible")$RLG)
cor.test(subset(exploration_time_with_replace,Condition=="tangible")$Trial.1,subset(exploration_time_with_replace,Condition=="tangible")$Post_tot_Score)
cor.test(subset(exploration_time_with_replace,Condition=="tangible")$Trial.1,subset(exploration_time_with_replace,Condition=="tangible")$Exp_tot_Score)
cor.test(subset(exploration_time_with_replace,Condition=="tangible")$Trial.2,subset(exploration_time_with_replace,Condition=="tangible")$RLG)
cor.test(subset(exploration_time_with_replace,Condition=="tangible")$Trial.2,subset(exploration_time_with_replace,Condition=="tangible")$Post_tot_Score)
cor.test(subset(exploration_time_with_replace,Condition=="tangible")$Trial.2,subset(exploration_time_with_replace,Condition=="tangible")$Exp_tot_Score)
cor.test(subset(exploration_time_with_replace,Condition!="tangible")$Trial.1,subset(exploration_time_with_replace,Condition!="tangible")$RLG)
cor.test(subset(exploration_time_with_replace,Condition!="tangible")$Trial.1,subset(exploration_time_with_replace,Condition!="tangible")$Post_tot_Score)
cor.test(subset(exploration_time_with_replace,Condition!="tangible")$Trial.1,subset(exploration_time_with_replace,Condition!="tangible")$Exp_tot_Score)
cor.test(subset(exploration_time_with_replace,Condition!="tangible")$Trial.2,subset(exploration_time_with_replace,Condition!="tangible")$RLG)
cor.test(subset(exploration_time_with_replace,Condition!="tangible")$Trial.2,subset(exploration_time_with_replace,Condition!="tangible")$Post_tot_Score)
cor.test(subset(exploration_time_with_replace,Condition!="tangible")$Trial.2,subset(exploration_time_with_replace,Condition!="tangible")$Exp_tot_Score)
View(exploration_time_with_replace)
View(exploration_time_with_replace)
rowsum(exploration_time_with_replace[,c(3:10)])
sum(exploration_time_with_replace[,c(3:10)])
sumrows(exploration_time_with_replace[,c(3:9)])
rowsum(exploration_time_with_replace[,c(3:9)])
colSums(exploration_time_with_replace[,c(3:9)])
rowSums(exploration_time_with_replace[,c(3:9)])
exploration_time_with_replace$sum=rowSums(exploration_time_with_replace[,c(3:10)])
exploration_time_with_replace$sum=rowSums(exploration_time_with_replace[,c(3:9)])
cor.test(subset(exploration_time_with_replace,Condition!="tangible")$sum,subset(exploration_time_with_replace,Condition!="tangible")$RLG)
cor.test(subset(exploration_time_with_replace,Condition!="tangible")$sum,subset(exploration_time_with_replace,Condition!="tangible")$Post_tot_Score)
cor.test(subset(exploration_time_with_replace,Condition!="tangible")$sum,subset(exploration_time_with_replace,Condition!="tangible")$Exp_tot_Score)
cor.test(subset(exploration_time_with_replace,Condition=="tangible")$sum,subset(exploration_time_with_replace,Condition!="tangible")$RLG)
cor.test(subset(exploration_time_with_replace,Condition=="tangible")$sum,subset(exploration_time_with_replace,Condition!="tangible")$Post_tot_Score)
cor.test(subset(exploration_time_with_replace,Condition=="tangible")$sum,subset(exploration_time_with_replace,Condition!="tangible")$Exp_tot_Score)
qplot(data=exploration_time_with_replace,x=sum,y=RLG,facets = .~Condition,geom="point")
qplot(data=exploration_time_with_replace,x=sum,y=Post_test_Score,facets = .~Condition,geom="point")
qplot(data=exploration_time_with_replace,x=sum,y=Post_tot_Score,facets = .~Condition,geom="point")
qplot(data=exploration_time_with_replace,x=Group,y=sum,facets = .~Condition,geom="point")
qplot(data=exploration_time_with_replace,x=Condition,y=sum,geom="point")
qplot(data=exploration_time_with_replace,x=sum,y=Post_tot_Score,geom="smooth")
qplot(data=exploration_time_with_replace,x=sum,y=Post_tot_Score,geom="lm")
qplot(data=exploration_time_with_replace,x=sum,y=Post_tot_Score,geom="smooth")
qplot(data=exploration_time_with_replace,x=sum,y=Post_tot_Score,geom="line")
qplot(data=exploration_time_with_replace,x=sum,y=Post_tot_Score,geom="smooth")
qplot(data=exploration_time_with_replace,x=sum,y=Exp_tot_Score,geom="smooth")
qplot(data=exploration_time_with_replace,x=sum,y=RLG,geom="smooth")
qplot(data=exploration_time_with_replace,x=Trial.1,y=Exp_tot_Score,geom="smooth")
qplot(data=exploration_time_with_replace,x=Trial.1,y=Post_tot_Score,geom="smooth")
qplot(data=exploration_time_with_replace,x=Trial.1,y=RLG,geom="smooth")
mean(subset(exploration_time_with_replace,Condition=="tangible")$sum)
sd(subset(exploration_time_with_replace,Condition=="tangible")$sum)
mean(subset(exploration_time_with_replace,Condition!="tangible")$sum)
sd(subset(exploration_time_with_replace,Condition!="tangible")$sum)
cor.test(subset(exploration_time_with_replace,Condition=="tangible")$Trial.1,subset(exploration_time_with_replace,Condition=="tangible")$RLG,method = "spearman")
